name: Deploy

env:
  tailwind_cli_url: 'https://github.com/tailwindlabs/tailwindcss/releases/download/v3.2.1/tailwindcss-linux-x64'
  zola_cli_url: 'https://github.com/getzola/zola/releases/download/v0.16.1/zola-v0.16.1-x86_64-unknown-linux-gnu.tar.gz'

on:
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3


      - name: Cache Tailwind CSS
        id: cache-tailwind-css
        uses: actions/cache@v3
        with:
          path: static/assets/tailwind.dist.css
          key: ${{ env.tailwind_cli_url }}-${{ hashFiles('static/assets/tailwind.src.css', 'content/**/*.html', 'content/**/*.md', 'templates/**/*.html') }}

      - name: Install Tailwind CLI
        if: steps.cache-tailwind-css.outputs.cache-hit != 'true'
        run: |
          wget -q -O /usr/local/bin/tailwindcss \
            '${{ env.tailwind_cli_url }}'
          chmod u+x /usr/local/bin/tailwindcss

      - name: Build Tailwind CSS
        if: steps.cache-tailwind-css.outputs.cache-hit != 'true'
        run: |
          tailwindcss --minify \
            -i static/assets/tailwind.src.css \
            -o static/assets/tailwind.dist.css


      - name: Cache Zola CLI
        id: cache-zola-cli
        uses: actions/cache@v3
        with:
          path: /usr/local/bin/zola
          key: '${{ env.zola_cli_url }}'

      - name: Install Zola CLI
        if: steps.cache-zola-cli.outputs.cache-hit != 'true'
        run: |
          wget -q -O - \
            '${{ env.zola_cli_url }}' \
            | tar xzf - -C /usr/local/bin
          chmod u+x /usr/local/bin/zola


      - name: Build
        run: zola build

      - name: Upload built site
        uses: actions/upload-pages-artifact@v1
        with:
          path: public
          retention-days: 7

  deploy:
    needs: build

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
